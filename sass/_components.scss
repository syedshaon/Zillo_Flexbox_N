////////////////////////////////////////////
////////Logo

.logo {
	height: 3.25rem;
	margin-left: 3.25rem;
}

////////////////////////////////////////////
////////Search

.search {
	//background-color: orangered;
	flex: 0 0 40%;
	
	display: flex;
	align-items: center;
	justify-content: center;
	 overflow: hidden;
	&_input {
		font-family: inherit;
		font-size: inherit;
		background-color: $Grey-light-2;
		border: none;
		padding: 0.7rem 2rem;
		border-radius: 100px;
		width: 90%;
		transition: all 0.5s;
		margin-right: -6rem;
		&:focus {
			outline: none;
			width: 100%;
			background-color: $Grey-light-3;
		}
		&::placeholder {
			font-weight: 100;
			color: $Grey-light-4;
		}
	}

	&_button {
		border: none;
		background-color: $Grey-light-2;
		&:focus {
			outline: none;
		}
		&:active {
			transform: translateY(2px);
		}
	}
	&_input:focus + &_button {
		background-color: $Grey-light-3;
	}

	&_icon {
		height: 2rem;
		width: 2rem;
		cursor: pointer;
		//fill: $Grey-dark-3;
	}

	 @media only screen and (max-width: $small) {
		
			flex: 0 0 100%;
			max-width: 400px;
			margin: 2rem auto;
			order: 3;

			&_input {
				padding: 1rem 2rem;
				font-size: 2.5rem;
				margin-right: -6rem;
			}
			&_icon{
				height: 3rem;
				width: 3rem;
			}
	} 
}

////////////////////////////////////////////
////////User Navigation
.user-nav {
	//align-self: stretch;
	 
	display: flex;
	//background-color: greenyellow;
	align-items: center;
	justify-content: space-between;

	flex: 0 0 25%;
	//overflow: hidden;	
	

	& > * {
		padding: 0 2rem;
		cursor: pointer;
	}
	& > *:hover {
		background-color: $Grey-light-3;

		//background-color: red;
	}
	&_icon-box {
		position: relative;
		//overflow: hidden;
		display: flex;
		//flex: 0 0 25%;
		//align-self: stretch;
		align-items: center;
		&:hover{
			background-color: transparent;
		}
	}
	&_icon {
		height: 3rem;
		width: 3rem;
		
		//fill: $Grey-dark-2;
	}
	&_notification {
		height: 2.25rem;
		width: 2.25rem;
		background-color: $color-primary;
		border-radius: 50%;
		color: #fff;
		//align-self: flex-start;
		//text-align: center;  Rather used next 3 lines to center the text inside
		display: flex;
		align-items: center;
		justify-content: center;

		position: absolute;
		left: 3.6rem;
		bottom: 2rem;
		z-index: 10;
	}
	&_user {
		//flex: 0 0 50%;
		display: flex;
		align-items: center;
		justify-content: space-around;
		&:hover{
			background-color: transparent;
		}
		//align-self: stretch;
	}
	&_user-photo {
		height: 3.75rem;
		width: 3.75rem;
		border-radius: 50%;
	}
	&_user-name {
		margin-left: 1rem;
		font-size: 2rem;
		color: $Grey-dark-2;
		font-weight: 600;
	}

	@media only screen and (max-width: $largest) {
		flex: 0 0 35%;
	}
	@media only screen and (max-width: $small) {
		flex: 0;
		& > * {
		flex: 0;
	}
		 
	}
}

////////////////////////////////////////////
////////Side Navigation
.sidebar {
	display: flex;
	flex-direction: column;

	justify-content: space-between;
}

.side-nav {
	margin-top: 3rem;
	display: block;
	width: 100%;
	//align-self: stretch;
	padding-left: 0;
	// I like it this way Jonas made the current link fixed with background color which doesn't change when hover over other items
	&_active {
		background-color: $color-primary-light;
		transition: all 0.5s;
	}
	&_item {
		// to center its content
		display: flex;
		//
		justify-content: flex-start;
		list-style: none;
		padding: 2rem 0 2rem 2rem;
		z-index: 10;

		&:not(:last-child) {
			margin-bottom: 0.5rem;
		}
		@media only screen and (max-width: $medium) {
			 
			align-items: center;
			&:not(:last-child) {
				margin-bottom: 0rem;
			}
		}

		position: relative;
		overflow: hidden; // To make the background of ::after hidden when in translateX(-100%);
		&::after {
			padding: 2rem 0 2rem 2rem;
			z-index: -100;
			position: absolute;
			left: 0;
			top: 0;
			content: ".";
			font-size: 2rem;
			color: transparent;
			display: block;
			width: 0%;
			background-color: $color-primary-light;
			transform-origin: center;
			transition: transform 0.5s, width cubic-bezier(0.5, 0.2, 0.2, 1) 0.8s, background-color 0.2s;
			//transform: translateX(-100%) scaleY(0);
			transform: scaleY(0);

			// I did the same effect with making width 100% in first place and then translateX(-100%) to hide it, (made parent overflow:hidden) Later on hover translateX(0%). Jonas did what is present now
		}
		&::after:hover {
			//transform: translateX(10%);
			//background-color: black;
		}
	}
	&_item:active::after {
		background-color: $color-primary-dark;
	}
	&_item:hover::after {
		//background-color: black;
		//transform: translateX(0%) scaleY(1);
		transform: scaleY(1);
		width: 100%;
	}

	// This part is done to make the current page's (Home - Hotel) background color transparent when we hover over other li items
	&:hover > *:not(:hover) {
		background-color: transparent !important;
	}
	&_item span {
		color: #fff;
		font-size: 1.7rem;
		@media only screen and (max-width: $small) {
			font-size: 1.4rem;
		}
		margin-left: 1.7rem;
		font-weight: 600;
		text-transform: uppercase;
	}
	&_link,
	&_link:link,
	&_link:visited {
		text-decoration: none;
	}
	&_icon {
		width: 1.7rem;
		height: 1.7rem;
		//fill: #fff;
		@media only screen and (max-width: $vsmall) {
			display: none;
		}

	}

	@media only screen and (max-width: $medium) {
		margin-top: 0;
		display: flex;
		flex-direction: row;
		justify-content: space-around;
		& > * {
			flex: 1;
		}
	}
}

////////////////////////////////////////////
////////Side Navigation
.legal {
	font-size: 1.2rem;
	color: $Grey-light-4;
	text-align: center;
	padding: 2.5rem;
	@media only screen and (max-width: $medium) {
		display: none;
	}
}

////////////////////////////////////////////
////////Gallery

.gallery {
	display: flex;
	&_photo {
		width: 100%;
		display: block;
	}
}

////////////////////////////////////////////
////////Overview

.overview {
	border-bottom: 1px solid $Grey-light-2;
	display: flex;
	align-items: center;

	background-color: #fff;

	&_heading {
		font-size: 2.5rem;
		padding: 0 2rem;
		@media only screen and (max-width: $small) {
			font-size: 2rem;
		}
	}
	&_stars {
		align-self: center;
		display: flex; // to to center the stars vertically as they act as inline element
	}
	&_icon_star,
	&_icon_nav {
		//margin-top: 0.5rem;
		width: 2.5rem;
		height: 2.5rem;
		//fill: $color-primary;
		@media only screen and (max-width: $small) {
			width: 2rem;
			height: 2rem;
		}
	}
	&_location {
		margin-left: auto;
		display: flex;
		align-items: center;
		margin-right: 3rem;
		@media only screen and (max-width: $small) {
			font-size: 1.5rem;
		}
	}
	&_rating {
		display: flex;
		flex-direction: column;
		background-color: $color-primary;
		align-items: center;
		justify-content: center;
		color: #fff;
		//padding: 0 4rem;
		////height: 100%;
		////align-self: stretch;
		padding: 1rem 4rem;
		@media only screen and (max-width: $small) {
			padding: 1rem 2rem;
		}
	}
	&_rating_average {
		font-size: 2.5rem;
		margin-bottom: -5px;
		@media only screen and (max-width: $small) {
			font-size: 2rem;
			margin-bottom: 5px;
		}
	}
	&_rating_count {
		text-transform: uppercase;
		margin-bottom: 10px;
	}
}

@keyframes pulsate {
	0% {
	}
	50% {
		transform: scale(1.1);
		box-shadow: 0 1rem 4rem rgba(0, 0, 0, 0.25);
	}
	100% {
		transform: scale(1);
		box-shadow: none;
	}
}

////////////////////////////////////////////
////////paragraph
.paragraph:not(:last-of-type) {
	margin-bottom: 1rem;
}

////////////////////////////////////////////
////////List

.list {
	list-style: none;
	margin: 3rem 0;
	padding: 3rem 0;
	border-top: $border-grey;
	border-bottom: $border-grey;
	display: flex;
	flex-wrap: wrap;

	&_item {
		flex: 0 0 50%;
		margin-bottom: 0.7rem;
		display: flex;
		align-items: center;
	}
	&_item:before {
		// Changing color in svg file with  style="//fill:#eb2f64;" will make it reddish then only using content: url(../img/SVG/chevron-right.svg); will make all perfect
		content: "";
		background-image: url(../img/chevron-thin-right.svg);
		background-size: cover;

		//content: "";
		display: inline-block;
		height: 1.5rem;
		width: 1.5rem;
		margin-right: 0.8rem;

		//Older Browser
		//background-image: url(../img/SVG/chevron-right.svg);
		// Background-size:cover;
		// Jonas used mask to make the mask image have the background color
		//Newer Browser
		//background-color: $color-primary;
		//mask-image: url(../img/SVG/chevron-right.svg);
		//mask-size: cover;
	}
}

////////////////////////////////////////////
////////Recommend
.rocommend {
	font-size: 1.3rem;
	@media only screen and (max-width: $small) {
		font-size: 1.7rem;
	}
	color: $Grey-dark-3;
	display: flex;
	align-items: center;
	justify-content: space-between;

	&_count {
	}
	&_friends {
	}

	&_photo {
		box-sizing: content-box;
		height: 4rem;
		border-radius: 50%;
		margin-left: -2rem;
		border: 3px solid #fff;
	}
}

////////////////////////////////////////////
////////Review
.review {
	background-color: #fff;
	box-shadow: $shadow-light;
	padding: 3rem;
	margin-bottom: 3.5rem;
	position: relative;
	z-index: 10;
	overflow: hidden; 
	@media only screen and (max-width: $small) {
		align-self: stretch;
		font-size: 2rem;
	}
	&::before {
		content: "\201C";
		position: absolute;
		color: $Grey-light-3;
		z-index: -10;
		line-height: 1;
		font-family: sans-serif;
		left: -1rem;
		top: -2.4rem;
		font-size: 20rem;
	}
	&_text {
		margin-bottom: 1rem;
	}
	&_user {
		display: flex;
		align-items: center;
	}
	&_photo {
		height: 4.5rem;
		border-radius: 50%;
	}
	&_user-box {
		margin-left: 1rem;
	}
	&_user-name {
		font-weight: 600;
		font-size: 1.5rem;
		@media only screen and (max-width: $small) {
			font-size:: 2rem;
		}
	}
	&_user-date {
		font-size: 1.1rem;
		@media only screen and (max-width: $small) {
			font-size: 1.5rem;
		}
	}
	&_rating {
		margin-left: auto;
		color: $color-primary;
		font-size: 2rem;
		@media only screen and (max-width: $small) {
			font-size: 2.5rem;
		}
		font-weight: 600;
	}
}

////////////////////////////////////////////
////////Inline Button
.btn-inline {
	border: none;
	color: $color-primary;
	font-size: 1.5rem;
	border-bottom: 2px solid $color-primary;
	padding: 0;
	padding-bottom: 5px;
	display: inline-block;
	background-color: transparent;
	cursor: pointer;
	transition: all 0.2s;

	margin-left: 0.5rem;
	font-weight: 600;

	& span {
		margin-left: 4px;
		transition: margin-left 0.2s;
	}
	&:hover {
		color: $Grey-dark-1;
	}
	&:hover {
		outline: none;
		animation: pulsate 1s infinite;
	}
}

////////////////////////////////////////////
////////call to actions
.cta {
	padding: 3.5rem 0;
	@media only screen and (max-width: $medium) {
		padding: 2rem 0;
	}
	text-align: center;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	background-color: #fff;

	&_book-now {
		font-size: 2rem;
	}
	.btn {
		font-size: 1.5rem;
		@media only screen and (max-width: $large) {
			font-size: 2rem;
		}
		margin-top: 2rem;
		text-transform: uppercase;
		background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark);
		color: #fff;
		padding: 2rem 5rem;
		border-radius: 30px;
		overflow: hidden;
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		transition: all 0.3s;
		cursor: pointer;

		&_invisible {
			display: block;
			//content: "Only 4 Room Left";
			transform: translateY(-6rem);
			transition: all 0.3s;
			margin-top: -2rem;
		}
		&_visible {
			display: block;
			//content: "Book now";
			transform: translateY(0rem);
			transition: all 0.3s;
			margin-top: -0.2rem;
		}
		&:hover {
			background-image: linear-gradient(to right bottom, $color-primary-dark, $color-primary-light);
		}

		/*&:hover span:first-child {
			transform: translateY(4rem);
		}
		&:hover span:last-child {
			transform: translateY(0rem);
		} */
		// In situation like this check the compiled css so you can see which item is getting selected. Better dont use & with second selector
		&:hover .btn_visible {
			transform: translateY(6rem);
		}
		&:hover .btn_invisible {
			transform: translateY(0rem);
		}
		&:focus {
			outline: none;
			animation: pulsate 1s infinite;
		}
	}
}
